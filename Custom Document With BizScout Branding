import React from 'react';
import Document, { Html, Head, Main, NextScript } from 'next/document';
import { ServerStyleSheets } from '@mui/styles';

class MyDocument extends Document {
  render() {
    return (
      <Html lang="en">
        <Head>
          {/* Primary Meta Tags */}
          <meta charSet="utf-8" />
          <meta name="theme-color" content="#1d4ed8" />
          <meta name="description" content="BizScout - Intelligent Business Data Collection" />
          
          {/* Favicon */}
          <link rel="icon" href="/favicon.ico" />
          <link
            rel="apple-touch-icon"
            sizes="180x180"
            href="/apple-touch-icon.png"
          />
          <link
            rel="icon"
            type="image/png"
            sizes="32x32"
            href="/favicon-32x32.png"
          />
          <link
            rel="icon"
            type="image/png"
            sizes="16x16"
            href="/favicon-16x16.png"
          />
          <link rel="manifest" href="/site.webmanifest" />
          <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#1d4ed8" />
          <meta name="msapplication-TileColor" content="#1d4ed8" />
          
          {/* Web Fonts */}
          <link rel="preconnect" href="https://fonts.googleapis.com" />
          <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin="anonymous" />
          <link
            href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap"
            rel="stylesheet"
          />
          
          {/* Open Graph / Facebook */}
          <meta property="og:type" content="website" />
          <meta property="og:url" content="https://bizscout.app/" />
          <meta property="og:title" content="BizScout - Intelligent Business Data Collection" />
          <meta property="og:description" content="Discover and analyze local businesses with AI-powered data collection and visualization tools." />
          <meta property="og:image" content="https://bizscout.app/og-image.jpg" />
          
          {/* Twitter */}
          <meta property="twitter:card" content="summary_large_image" />
          <meta property="twitter:url" content="https://bizscout.app/" />
          <meta property="twitter:title" content="BizScout - Intelligent Business Data Collection" />
          <meta property="twitter:description" content="Discover and analyze local businesses with AI-powered data collection and visualization tools." />
          <meta property="twitter:image" content="https://bizscout.app/twitter-image.jpg" />
          
          {/* Custom Styles */}
          <style>
            {`
              /* BizScout Brand Colors */
              :root {
                --primary: #1d4ed8;
                --primary-light: #3b82f6;
                --primary-dark: #1e40af;
                --secondary: #2563eb;
                --accent: #f97316;
                --accent-light: #fb923c;
                --background: #f3f4f6;
                --paper: #ffffff;
                --text-primary: #1f2937;
                --text-secondary: #4b5563;
              }
              
              * {
                box-sizing: border-box;
                margin: 0;
                padding: 0;
              }
              
              body {
                background-color: var(--background);
                color: var(--text-primary);
                font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
              }
              
              /* Custom scrollbar */
              ::-webkit-scrollbar {
                width: 8px;
                height: 8px;
              }
              
              ::-webkit-scrollbar-track {
                background: #f1f1f1;
              }
              
              ::-webkit-scrollbar-thumb {
                background: #c1c1c1;
                border-radius: 4px;
              }
              
              ::-webkit-scrollbar-thumb:hover {
                background: #a8a8a8;
              }
            `}
          </style>
        </Head>
        <body>
          <Main />
          <NextScript />
        </body>
      </Html>
    );
  }
}

// `getInitialProps` belongs to `_document` (instead of `_app`),
// it's compatible with server-side generation (SSG).
MyDocument.getInitialProps = async (ctx) => {
  // Resolution order
  //
  // On the server:
  // 1. app.getInitialProps
  // 2. page.getInitialProps
  // 3. document.getInitialProps
  // 4. app.render
  // 5. page.render
  // 6. document.render
  //
  // On the server with error:
  // 1. document.getInitialProps
  // 2. app.render
  // 3. page.render
  // 4. document.render
  //
  // On the client
  // 1. app.getInitialProps
  // 2. page.getInitialProps
  // 3. app.render
  // 4. page.render

  // Render app and page and get the context of the page with collected side effects.
  const sheets = new ServerStyleSheets();
  const originalRenderPage = ctx.renderPage;

  ctx.renderPage = () =>
    originalRenderPage({
      enhanceApp: (App) => (props) => sheets.collect(<App {...props} />),
    });

  const initialProps = await Document.getInitialProps(ctx);

  return {
    ...initialProps,
    // Styles fragment is rendered after the app and page rendering finish.
    styles: [
      ...React.Children.toArray(initialProps.styles),
      sheets.getStyleElement(),
    ],
  };
};

export default MyDocument;
